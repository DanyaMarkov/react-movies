{"version":3,"file":"static/js/737.31be74ef.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Modal/Modal.jsx","components/Movie.jsx","components/MoviesList.jsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","\r\nimport './Modal.css'\r\n\r\nconst Modal = ({ active, setActive, children }) => {\r\n    return (\r\n        <div className={active ? \"modal active\" : \"modal\"} onClick={() => { setActive(false) }}>\r\n            <div className={active ? \"modal__content active\" : \"modal__content\"} onClick={e => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import { useEffect, useState } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport { searchAPI } from \"../api/api\";\r\nimport { Preloader } from \"../Utilities/Preloader\";\r\n\r\nconst Movie = (props) => {\r\n    const {\r\n        Title: title,\r\n        Year: year,\r\n        imdbID: id,\r\n        Type: type,\r\n        Poster: poster\r\n    } = props;\r\n\r\n    const [modalActive, setModalActive] = useState(false);\r\n    const [movieInfo, setMovieInfo] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    async function getMovieDescription(movieID) {\r\n        setLoading(true);\r\n        console.log(\"loading пошёл\")\r\n        let data = await searchAPI.getDescription(id);\r\n        setMovieInfo(data);\r\n        console.log(\"loading закончился\")\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div id={id} className=\"card\">\r\n            <div className=\"card-image waves-effect waves-block waves-light\">\r\n                {\r\n                    poster === \"N/A\"\r\n                        ? <img className=\"activator\" src={`https://via.placeholder.com/300x420?text=${title}`} alt=\"Постер\" />\r\n                        : <img className=\"activator\" src={poster} alt=\"Постер\" />\r\n                }\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title activator grey-text text-darken-4\">\r\n                    {title}\r\n                </span>\r\n                <p>\r\n                    <span>{year}</span> <br />\r\n                    <span>{type === \"movie\" ? \"Фильм\" : \"Сериал\"}</span>\r\n                </p>\r\n            </div>\r\n\r\n            <div class=\"card-action\">\r\n                <span href=\"#\"\r\n                    className=\"btn\"\r\n                    onClick={() => {\r\n                        setModalActive(true);\r\n                        getMovieDescription(id);\r\n                        setLoading(true)\r\n                    }}>Подробнее</span>\r\n            </div>\r\n\r\n\r\n            <Modal active={modalActive} setActive={setModalActive}>\r\n                {\r\n                    loading\r\n                        ? <Preloader />\r\n                        : <div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <div>\r\n                                        {\r\n                                            poster === \"N/A\"\r\n                                                ? <img src={`https://via.placeholder.com/300x420?text=${title}`} alt=\"Постер\" />\r\n                                                : <img src={poster} alt=\"Постер\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <div className=\"\">\r\n                                        <h3>\r\n                                            {title}\r\n                                        </h3>\r\n                                        <p>\r\n                                            <span> <b>Дата выхода: </b>{movieInfo.Released}</span> <br />\r\n                                            <span><b>Возрастной рейтинг: </b>{movieInfo.Rated}</span> <br />\r\n                                            <span><b>Продолжительность: </b>{movieInfo.Runtime}</span> <br />\r\n                                            <span><b>Жанр: </b>{movieInfo.Genre}</span> <br />\r\n                                            <span><b>Режиссёр: </b>{movieInfo.Director}</span> <br />\r\n                                            <span><b>Актёры: </b>{movieInfo.Writer}</span> <br />\r\n                                            <span><b>Сценарист: </b>{movieInfo.Actors}</span> <br />\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <h3>Про что {type === \"movie\" ? \" фильм \" : \" сериал \"} {title}</h3>\r\n                                <p>\r\n                                    {movieInfo.Plot}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Movie }","import { Movie } from \"./Movie\";\r\n\r\n\r\nconst MoviesList = (props) => {\r\n    const { movies = [] } = props;\r\n    return (\r\n        <div className=\"movies\">\r\n\r\n            {\r\n                movies.length\r\n                    ? movies.map(movie => {\r\n                        return <Movie key={movie.imdbID} {...movie} />\r\n                    })\r\n                    : <h3>Ничего не найдено</h3>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviesList;"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","active","setActive","children","className","onClick","e","stopPropagation","Movie","props","title","Title","year","Year","id","imdbID","type","Type","poster","Poster","useState","modalActive","setModalActive","movieInfo","setMovieInfo","loading","setLoading","movieID","console","log","searchAPI","data","useEffect","src","alt","class","href","getMovieDescription","Preloader","Released","Rated","Runtime","Genre","Director","Writer","Actors","Plot","movies","length","map","movie","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}